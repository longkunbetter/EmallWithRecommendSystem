<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    ">

    <!--读取properties文件-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:system-conf/dataSource.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <!-- 扫描文件（自动将servicec层注入） -->
    <context:component-scan base-package="com.emall.*.service"></context:component-scan>

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close" p:driverClass="${driverClasss}"
          p:jdbcUrl="${jdbcUrl}"
          p:user="${username}" p:password="${password}" p:maxPoolSize="${maxActive}"
          p:minPoolSize="${minIdle}" p:initialPoolSize="${initialSize}" p:maxIdleTime="${maxWait}" />

    <!-- mybatis文件配置，扫描所有mapper xml文件 -->
    <!-- configLocation为mybatis属性 mapperLocations为所有mapper xml文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource" p:configLocation="classpath:system-conf/mybatis-config.xml"
          p:mapperLocations="classpath:mapper/*.xml" />
    <!-- spring与mybatis整合配置，扫描所有mapper 接口类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.emall.*.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory" />

    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" />

    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true" />
</beans>